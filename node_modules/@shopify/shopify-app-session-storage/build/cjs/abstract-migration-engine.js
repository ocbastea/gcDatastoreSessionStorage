'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var types = require('./types.js');

class AbstractMigrationEngine {
  constructor(db, opts = {}) {
    this.options = void 0;
    this.connection = void 0;
    this.ready = void 0;
    this.options = {
      ...types.defaultSessionStorageMigratorOptions,
      ...opts
    };
    this.connection = db;
    this.ready = this.initMigrationPersistence();
  }
  async applyMigrations() {
    await this.ready;
    for (const {
      migrationName,
      migrationFunction
    } of this.getMigrationList()) {
      const migrationApplied = await this.hasMigrationBeenApplied(migrationName);
      if (!migrationApplied) {
        await migrationFunction(this.connection);
        await this.saveAppliedMigration(migrationName);
      }
    }
    return Promise.resolve();
  }
  getMigrationList() {
    return this.options.migrations;
  }
  validateMigrationList(migrationList) {
    if (this.options !== null) for (const {
      migrationName
    } of migrationList) {
      let entryFound = false;
      for (const optionMigration of this.options.migrations) {
        if (migrationName === optionMigration.migrationName) {
          entryFound = true;
          break;
        }
      }
      if (!entryFound) {
        throw new types.InvalidMigrationConfigurationError("'Internal migrations are missing, add the 'migrationList' from the 'migrations.ts' file");
      }
    }
  }
}

exports.AbstractMigrationEngine = AbstractMigrationEngine;
